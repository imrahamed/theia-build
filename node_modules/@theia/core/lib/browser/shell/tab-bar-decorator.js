"use strict";
/********************************************************************************
 * Copyright (C) 2019 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var common_1 = require("../../common");
exports.TabBarDecorator = Symbol('TabBarDecorator');
var TabBarDecoratorService = /** @class */ (function () {
    function TabBarDecoratorService() {
        this.onDidChangeDecorationsEmitter = new common_1.Emitter();
        this.onDidChangeDecorations = this.onDidChangeDecorationsEmitter.event;
        this.toDispose = new common_1.DisposableCollection();
    }
    TabBarDecoratorService.prototype.init = function () {
        var _this = this;
        var decorators = this.contributions.getContributions();
        this.toDispose.pushAll(decorators.map(function (decorator) {
            return decorator.onDidChangeDecorations(function (data) {
                return _this.onDidChangeDecorationsEmitter.fire(undefined);
            });
        }));
    };
    TabBarDecoratorService.prototype.dispose = function () {
        this.toDispose.dispose();
    };
    /**
     * Assign tabs the decorators provided by all the contributions.
     * @param {Title<Widget>[]} titles An array of the titles of the tabs.
     * @returns A map from the URI of the tab to an array of its decoration data.
     */
    TabBarDecoratorService.prototype.getDecorations = function (titles) {
        var e_1, _a, e_2, _b;
        var decorators = this.contributions.getContributions();
        var changes = new Map();
        try {
            for (var decorators_1 = __values(decorators), decorators_1_1 = decorators_1.next(); !decorators_1_1.done; decorators_1_1 = decorators_1.next()) {
                var decorator = decorators_1_1.value;
                try {
                    for (var _c = __values((decorator.decorate(titles)).entries()), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var _e = __read(_d.value, 2), id = _e[0], data = _e[1];
                        if (changes.has(id)) {
                            changes.get(id).push(data);
                        }
                        else {
                            changes.set(id, [data]);
                        }
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (decorators_1_1 && !decorators_1_1.done && (_a = decorators_1.return)) _a.call(decorators_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return changes;
    };
    __decorate([
        inversify_1.inject(common_1.ContributionProvider), inversify_1.named(exports.TabBarDecorator),
        __metadata("design:type", Object)
    ], TabBarDecoratorService.prototype, "contributions", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], TabBarDecoratorService.prototype, "init", null);
    TabBarDecoratorService = __decorate([
        inversify_1.injectable()
    ], TabBarDecoratorService);
    return TabBarDecoratorService;
}());
exports.TabBarDecoratorService = TabBarDecoratorService;
//# sourceMappingURL=tab-bar-decorator.js.map